################################################################################
#
# * This file is part of SplashSync Project.
# *
# * Copyright (C) Splash Sync <www.splashsync.com>
# *
# * This program is distributed in the hope that it will be useful,
# * but WITHOUT ANY WARRANTY; without even the implied warranty of
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# *
# * For the full copyright and license information, please view the LICENSE
# * file that was distributed with this source code.
# *
# * @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Set any variables we need
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE:               SymfonyUsers
  MYSQL_ROOT_PASSWORD:          SPLASH_CI
  COMPOSER_MEMORY_LIMIT:        -1
  SYMFONY_DEPRECATIONS_HELPER:  disabled

################################################################
# Defined Pipeline Stages
stages:
  - tests
  - deploy

################################################################
# Functional Tests
################################################################

.core_tests:    &core_tests
    stage:      tests
    tags:
      - Dedicated
    services:
      - mariadb:10
    artifacts:
        reports:
            junit: "$CI_PROJECT_DIR/*-report.xml"
    before_script:
        ################################################################################
        # Configure Environnement
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/configure.sh | sh
        # Deploy Symfony
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/symfony/deploy.sh | sh
        # Setup Symfony Version & Create Database
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/symfony/configure.sh | sh
        # Install Symfony
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/symfony/install.sh | sh
    script:
        ################################################################################
        # Execute Grump Travis Testsuite
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/grumphp.sh | sh
        ################################################################################
        # Execute PhpUnit Tests
        - php vendor/bin/phpunit --log-junit $CI_PROJECT_DIR/main-report.xml
    after_script:
        ################################################################################
        # Run After Script
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/after.sh | sh

tests:php-8.1:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-8.1
    <<: *core_tests

tests:php-8.0:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-8.0
    <<: *core_tests

#################################################################
## Build Documentation
#################################################################
pages:
    image:    registry.gitlab.com/badpixxel-projects/php-sdk:jekyll
    stage:    deploy
    tags:
      - Dedicated
    services:
      - docker:dind
    ################################################################################
    # Run Test Script
    before_script:
        ################################################################################
        # Configure Environnement
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/configure.sh | sh
        # Deploy Symfony
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/symfony/deploy.sh | sh
        # Composer Build
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh | sh
  ################################################################################
  # Run Test Script
    script:
        ################################################################################
        # Build Manifest
        - php vendor/bin/grumphp run --tasks=build-manifest
        # Build Documentation
        - php vendor/bin/grumphp run --tasks=build-docs
    artifacts:
        paths:
            - public
